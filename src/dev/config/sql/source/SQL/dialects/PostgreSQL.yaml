_extends: [SQL]
types:
  dateTime: TIMESTAMP
ddl:
  incrementalColumDefine: "{name} serial"
  dropPk: "DROP CONSTRAINT {name}"
  dropUk: "DROP CONSTRAINT {name}"
  dropFk: "DROP CONSTRAINT {name}"
  dropIndex: "DROP INDEX {name}"
dml:
  page: "{sentence} OFFSET {offset} LIMIT {records}"
  insert: INSERT INTO {name}({fields}) VALUES({values}) RETURNING {autoIncrementField} AS id
  bulkInsert: INSERT INTO {name}({fields}) VALUES
others:
  variable: "${number}"
operators:
  binary:  
    '^': '{0} # {1}'
    '^=': '{0} = {0} # {1}'  
functions:
  numeric:
    round: "ROUND(CAST({0} AS DECIMAL),{1})"
    remainder: "MOD({0},{1})"
    toNumber: "CAST({0} AS INTEGER)"
    log10: 'LOG({0})'
  dateTime:
    # https://www.postgresql.org/docs/8.4/datatype-dateTime.html
    # https://www.postgresql.org/docs/9.1/functions-formatting.html
    now: 'to_char(now()::timestamp at time zone ''UTC'', ''YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"'')'
    today: "to_char(now()::timestamp at time zone 'UTC', 'YYYY-MM-DD')"
    curTime: "to_char(now()::timestamp at time zone 'UTC', 'HH24:MI:SS')"
    dateTime: 'to_char({0}::timestamp at time zone ''UTC'', ''YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"'')'
    date: "to_char({0}::timestamp at time zone 'UTC', 'YYYY-MM-DD')"
    time: "to_char({0}::timestamp at time zone 'UTC', 'HH24:MI:SS')"
    year: "date_part('year', timestamp {0})"
    month: "date_part('month', timestamp {0})"
    day: "date_part('day', timestamp {0})"
    weekday: "extract(dow from timestamp {0})"
    hour: "date_part('hour', timestamp {0})"
    minute: "date_part('minute', timestamp {0})"
    second: "date_part('second', timestamp {0})"
    millisecond: "mod(extract('millisecond' from timestamp {0})::decimal/1000,1)*1000"
    addYear: "(timestamp {0} + ({1} * INTERVAL '1 year'))"
    addMonth: "(timestamp {0} + ({1}  * INTERVAL '1 month'))"
    addDay: "(timestamp {0} + ({1}  * INTERVAL '1 day'))"
    addHour: "(timestamp {0} + ({1}  * INTERVAL '1 hour'))"
    addMinute: "(timestamp {0} + ({1}  * INTERVAL '1 minute'))"
    addSecond: "(timestamp {0} + ({1}  * INTERVAL '1 second'))"
    addMillisecond: "(timestamp {0} + ({1}  * INTERVAL '1 millisecond'))"
    addTime: "(timestamp {0} + time {1})"
    subtractTime: "(timestamp {0} - time {1})"
    dayDiff: "(extract('epoch' from (timestamp {0} - timestamp {1} ))/ (24 * 3600))"
    hourDiff: "(extract('epoch' from (timestamp {0} - timestamp {1} ))/3600)"
    secondDiff: "extract('epoch' from (timestamp {0} - timestamp {1} ))"
    millisecondDiff: "(extract('epoch' from (timestamp {0} - timestamp {1} ))*1000)"
    dayToDate: 'to_char(TO_TIMESTAMP({0}*24*3600*1000)::timestamp, ''YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"'')'
    hourToDate: 'to_char(TO_TIMESTAMP({0}*3600*1000)::timestamp, ''YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"'')'
    secondToDate: 'to_char(TO_TIMESTAMP({0}*1000)::timestamp, ''YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"'')'
    millisecondToDate: 'to_char(TO_TIMESTAMP({0})::timestamp, ''YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"'')'
    dateToString: 'to_char ({0}::timestamp at time zone ''UTC'', ''YYYY-MM-DD"T"HH24:MI:SS"Z"'')'
    # -- now
    # SELECT to_char(now()::timestamp at time zone 'UTC', 'YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"')
    # -- today
    # SELECT to_char(now()::timestamp at time zone 'UTC', 'YYYY-MM-DD')
    # --curtime
    # SELECT to_char(now()::timestamp at time zone 'UTC', 'HH24:MI:SS')
    # -- time  (from value)
    # SELECT to_char(now()::timestamp at time zone 'UTC', 'HH24:MI:SS')
    # -- date (from value)
    # SELECT to_char(now()::timestamp at time zone 'UTC', 'YYYY-MM-DD')
    # -- dateTime (from value)
    # SELECT to_char(now()::timestamp at time zone 'UTC', 'YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"')
    # -- year
    # select date_part('year', timestamp '2022-03-17T11:28:37.138Z')
    # -- month
    # select date_part('month', timestamp '2022-03-17T11:28:37.138Z')
    # -- day
    # select date_part('day', timestamp '2022-03-17T11:28:37.138Z')
    # -- weekday
    # select extract(dow from timestamp '2022-03-17T11:28:37.138Z')
    # -- hour
    # select date_part('hour', timestamp '2022-03-17T11:28:37.138Z')
    # -- minute
    # select date_part('minute', timestamp '2022-03-17T11:28:37.138Z')
    # -- second
    # select round(extract('second' from timestamp '2022-03-17T11:28:37.138Z'))
    # -- millisecond
    # select mod(extract('millisecond ' from timestamp '2022-03-17T11:28:37.138Z')::decimal/1000,1)*1000
    # -- addYear
    # select (timestamp '2022-03-17T11:28:37.138Z' + (2 * INTERVAL '1 year'))
    # -- addMonth
    # select (timestamp '2022-03-17T11:28:37.138Z' + (2 * INTERVAL '1 month'))
    # -- addDay
    # select (timestamp '2022-03-17T11:28:37.138Z' + (2 * INTERVAL '1 day'))
    # -- addHour
    # select (timestamp '2022-03-17T11:28:37.138Z' + (2 * INTERVAL '1 hour'))
    # -- addMinute
    # select (timestamp '2022-03-17T11:28:37.138Z' + (2 * INTERVAL '1 minute'))
    # -- addSecond
    # select (timestamp '2022-03-17T11:28:37.138Z' + (2 * INTERVAL '1 second'))
    # -- addMillisecond
    # select (timestamp '2022-03-17T11:28:37.138Z' + (2 * INTERVAL '1 millisecond'))
    # -- addTime
    # select (timestamp '2022-03-17T11:28:37.138Z' + time '03:10:12' )
    # -- dayDiff
    # select extract('epoch' from (timestamp '2022-03-18T11:28:39.000Z' - timestamp '2022-03-17T11:28:38.000Z' ))/ (24 * 3600)
    # -- hourDiff
    # select extract('epoch' from (timestamp '2022-03-17T11:28:37.000Z' - timestamp '2022-03-17T12:28:38.012Z' ))/3600
    # -- secondDiff
    # select extract('epoch' from (timestamp '2022-03-17T11:28:37.000Z' - timestamp '2022-03-17T11:28:38.012Z' ))
    # -- millisecondDiff
    # select extract('epoch' from (timestamp '2022-03-17T11:28:37.000Z' - timestamp '2022-03-17T11:28:38.012Z' ))*1000
    # -- dayToDate
    # select to_char(TO_TIMESTAMP(2*24*3600*1000)::timestamp, 'YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"')
    # -- hourToDate
    # select to_char(TO_TIMESTAMP(2*3600*1000)::timestamp, 'YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"')
    # -- secondToDate
    # select to_char(TO_TIMESTAMP(2*1000)::timestamp, 'YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"')
    # -- millisecondToDate
    # select to_char(TO_TIMESTAMP(2)::timestamp, 'YYYY-MM-DD"T"HH24:MI:SS"."MS"Z"')
  null:
    nvl: "(CASE WHEN {0} IS NOT NULL THEN {0} ELSE {1} END)"
    nvl2: "(CASE WHEN {0} IS NOT NULL THEN {1} ELSE {2} END)"   
